/*----- PROTECTED REGION ID(Dhyana6060.h) ENABLED START -----*/
//=============================================================================
//
// file :        Dhyana6060.h
//
// description : Include file for the Dhyana6060 class
//
// project :     
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#ifndef Dhyana6060_H
#define Dhyana6060_H

#include <tango.h>
#include <yat/memory/UniquePtr.h>
#include <yat4tango/PropertyHelper.h>

#include "IAttrViewDhyana6060.h"
#include "Dhyana6060Camera.h"
#include "Dhyana6060Interface.h"
#include "Factory.h"
#include "lima/HwInterface.h"
#include "lima/CtControl.h"
//#include "lima/CtAcquisition.h"
//#include "lima/CtImage.h"





/*----- PROTECTED REGION END -----*/	//	Dhyana6060.h

/**
 *  Dhyana6060 class description:
 *    
 */

namespace Dhyana6060_ns
{
/*----- PROTECTED REGION ID(Dhyana6060::Additional Class Declarations) ENABLED START -----*/

//	Additional Class Declarations

/*----- PROTECTED REGION END -----*/	//	Dhyana6060::Additional Class Declarations

class Dhyana6060 : public TANGO_BASE_CLASS
{

/*----- PROTECTED REGION ID(Dhyana6060::Data Members) ENABLED START -----*/

//	Add your own data members
public:
	yat::UniquePtr<AttrView> m_attr_view;

/*----- PROTECTED REGION END -----*/	//	Dhyana6060::Data Members



//	Constructors and destructors
public:
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	Dhyana6060(Tango::DeviceClass *cl,string &s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	Dhyana6060(Tango::DeviceClass *cl,const char *s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device name
	 *	@param d	Device description.
	 */
	Dhyana6060(Tango::DeviceClass *cl,const char *s,const char *d);
	/**
	 * The device object destructor.
	 */
	~Dhyana6060() {delete_device();};


//	Miscellaneous methods
public:
	/*
	 *	will be called at device destruction or at init command.
	 */
	void delete_device();
	/*
	 *	Initialize the device
	 */
	virtual void init_device();
	/*
	 *	Always executed method before execution command method.
	 */
	virtual void always_executed_hook();


//	Attribute methods
public:
	//--------------------------------------------------------
	/*
	 *	Method      : Dhyana6060::read_attr_hardware()
	 *	Description : Hardware acquisition for attributes.
	 */
	//--------------------------------------------------------
	virtual void read_attr_hardware(vector<long> &attr_list);


	//--------------------------------------------------------
	/**
	 *	Method      : Dhyana6060::add_dynamic_attributes()
	 *	Description : Add dynamic attributes if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_attributes();




//	Command related methods
public:
	/**
	 *	Command GetAllParameters related method
	 *	Description: Return the list of all the camera available parameters and their values in the following format:
	 *               ParameterName=current_value
	 *
	 *	@returns 
	 */
	virtual Tango::DevString get_all_parameters();
	virtual bool is_GetAllParameters_allowed(const CORBA::Any &any);
	/**
	 *	Command GetParameter related method
	 *	Description: Return the current value of the specified parameter
	 *
	 *	@param argin 
	 *	@returns 
	 */
	virtual Tango::DevString get_parameter(Tango::DevString argin);
	virtual bool is_GetParameter_allowed(const CORBA::Any &any);
	/**
	 *	Command SetParameter related method
	 *	Description: Set the value of the specified parameter.
	 *
	 *	@param argin 
	 */
	virtual void set_parameter(const Tango::DevVarStringArray *argin);
	virtual bool is_SetParameter_allowed(const CORBA::Any &any);


	//--------------------------------------------------------
	/**
	 *	Method      : Dhyana6060::add_dynamic_commands()
	 *	Description : Add dynamic commands if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_commands();

/*----- PROTECTED REGION ID(Dhyana6060::Additional Method prototypes) ENABLED START -----*/

//	Additional Method prototypes
	
	// return true if the device is correctly initialized in init_device
	bool is_device_initialized();

	void build_view();

	lima::Dhyana6060::Camera* get_camera();

	void write_attr_at_init();

protected :

	bool                      m_is_device_initialized;

	//lima OBJECTS
    lima::Dhyana6060::Interface*  m_hw;
    lima::CtControl*          m_ct;
    lima::Dhyana6060::Camera*     m_camera;

/*----- PROTECTED REGION END -----*/	//	Dhyana6060::Additional Method prototypes
};

/*----- PROTECTED REGION ID(Dhyana6060::Additional Classes Definitions) ENABLED START -----*/

//	Additional Classes Definitions

/*----- PROTECTED REGION END -----*/	//	Dhyana6060::Additional Classes Definitions

}	//	End of namespace

#endif   //	Dhyana6060_H
